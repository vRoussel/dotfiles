{
  "script": {
    "body": [
      "#!/usr/bin/python3",
      "",
      "import logging",
      "import sys",
      "from argparse import ArgumentParser",
      "",
      "DRYRUN=True",
      "",
      "def setup_logging(verbose, log_file):",
      "    level = logging.DEBUG if verbose else logging.INFO",
      "",
      "    if DRYRUN:",
      "        FORMAT = \"%(asctime)s @%(lineno)d %(levelname)s | [DRYRUN] %(message)s\"",
      "    else:",
      "        FORMAT = \"%(asctime)s @%(lineno)d %(levelname)s | %(message)s\"",
      "",
      "    logger = logging.getLogger()",
      "    logger.setLevel(level)",
      "    formatter = logging.Formatter(FORMAT, datefmt=\"%Y-%m-%d %H:%M:%S\")",
      "",
      "    sh = logging.StreamHandler(sys.stdout)",
      "    sh.setFormatter(formatter)",
      "    logger.addHandler(sh)",
      "",
      "    if log_file:",
      "        fh = logging.FileHandler(log_file)",
      "        fh.setFormatter(formatter)",
      "        logger.addHandler(fh)",
      "",
      "def main():",
      "    ${1:}",
      "",
      "if __name__ == '__main__':",
      "    parser = ArgumentParser()",
      "    parser.add_argument(\"--no-dry-run\", dest=\"dry_run\", action=\"store_false\", help=\"Disable dry-run mode\")",
      "    parser.add_argument(\"-v\", \"--verbose\", action=\"store_true\", help=\"Increase log verbosity to debug\")",
      "    parser.add_argument(\"-l\", \"--logfile\", help=\"log to file\")",
      "",
      "    args = parser.parse_args()",
      "    DRYRUN = args.dry_run",
      "    setup_logging(args.verbose, args.logfile)",
      "",
      "    logging.info(\"Starting\")",
      "    logging.debug(\"args: %s\", sys.argv[1:])",
      "    main()"
    ],
    "prefix": "script"
  }
}
